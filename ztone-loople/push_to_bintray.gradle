apply plugin: 'com.jfrog.bintray'

version = libraryVersion

// Android libraries
if (project.hasProperty("android")) {
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }

} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    if (project.hasProperty("archiveJavaDocJar") && archiveJavaDocJar) {
        archives javadocJar
    }

    if (project.hasProperty("archiveSourceJar") && archiveSourceJar) {
        archives sourcesJar
    }
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
//    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
//    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')

    configurations = ['archives']

    pkg {
        userOrg = bintrayOrg
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription

        websiteUrl = siteUrl
        vcsUrl = gitUrl

        licenses = allLicenses

        publish = true
        override = project.hasProperty("bintrayOverride") && bintrayOverride

        publicDownloadNumbers = true

        // githubRepo = 'bintray/gradle-bintray-plugin' //Optional Github repository
        // githubReleaseNotesFile = 'README.md' //Optional Github readme file

        version {
            name = libraryVersion
            desc = libraryDescription

            released = new Date()

            //Optional. The passphrase for GPG signing'
            gpg {
                //Determines whether to GPG sign the files. The default is false
                sign = false
                passphrase = properties.getProperty("bintray.gpg.password")
            }
        }
    }
}
